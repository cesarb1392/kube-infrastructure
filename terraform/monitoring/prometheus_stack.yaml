# https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
prometheus:
  prometheusSpec:
    replicas: 1
    storageSpec:
      volumeClaimTemplate:
        spec:
          resources:
            requests:
              storage: 1Gi
    resources:
      requests:
        memory: 1Gi
      limits:
        memory: 1Gi
    nodeSelector:
      kubernetes.io/arch: arm64

alertmanager:
  enabled: false

grafana:
  enabled: true
  adminUser: "banana"
  adminPassword: "banana" 
  defaultDashboardsEnabled: true
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      memory: 512Mi
  nodeSelector:
    kubernetes.io/arch: arm64

kubeStateMetrics:
  enabled: true

nodeExporter:
  enabled: true
  resources:
    requests:
      cpu: "50m"
      memory: "50Mi"
    limits:
      memory: "50Mi"
  nodeSelector:
    kubernetes.io/arch: arm64

prometheusOperator:
  resources:
    requests:
      cpu: "100m"
      memory: "256Mi"
    limits:
      memory: "256Mi"
  nodeSelector:
    kubernetes.io/arch: arm64


# # full values: https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
# # k3s uses sqllite, so we cannot monitor etcd in the same way
# defaultRules:
#   rules:
#     etcd: true

# kubeEtcd:
#   enabled: true

# # matched to service port 'prom-stack-kube-prometheus-kube-controller-manager' -n kube-system
# kubeControllerManager:
#   enabled: true
#   endpoints: ['192.168.178.20']
#   service:
#     enabled: true
#     port: 10252
#     targetPort: 10252
#   serviceMonitor:
#     enabled: true
#     https: false

# # matched to service port 'prom-stack-kube-prometheus-kube-scheduler' -n kube-system
# kubeScheduler:
#   enabled: true
#   endpoints: ['192.168.178.20']
#   service:
#     enabled: true
#     port: 10251
#     targetPort: 10251
#   serviceMonitor:
#     enabled: true
#     https: false

# # matched to service port 'prom-stack-kube-prometheus-kube-proxy' -n kube-system
# kubeProxy:
#   enabled: true
#   endpoints: ['192.168.178.20']
#   service:
#     enabled: true
#     port: 10249
#     targetPort: 10249


